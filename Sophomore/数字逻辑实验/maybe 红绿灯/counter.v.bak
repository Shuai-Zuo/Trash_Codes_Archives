module counter(clk,red,yel,gre,con,mod)
input clk;
input [2:0]mod;
input[4:0]red,yel,gre;
output reg con;
reg [32:0]num=0;
always@(posedge clk)
begin
	if(con)
	begin
		if(num<1'b1)
			num<=num+1'b1;
		else
		begin
			num<=1'b0;
			con<=1'b0;
		end
	end
	else
	begin
		case(mod)
		2'b00:begin
			if(num<red)
				num<=num+1'b1;
			else
			begin
				num<=1'b0;
				con<=1'b1;
			end
		end
		2'b01:begin
			if(num<yel)
				num<=num+1'b1;
			else
			begin
				num<=1'b0;
				con<=1'b1;
			end
		end
		2'b10:begin
			if(num<gre)
				num<=num+1'b1;
			else
			begin
				num<=1'b0;
				con<=1'b1;
			end
		end
		2'b11:begin
			if(num<red)
				num<=num+1'b1;
			else
			begin
				num<=1'b0;
				con<=1'b1;
			end
		end
	endcase
end
endmodule